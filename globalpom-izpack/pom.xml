<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<artifactId>globalpom-parent</artifactId>
		<groupId>com.anrisoftware.globalpom</groupId>
		<version>1.28</version>
		<relativePath />
	</parent>

	<artifactId>globalpom-izpack</artifactId>
	<packaging>pom</packaging>
	<name>IzPack Installation</name>
	<version>2.0-SNAPSHOT</version>
	<description>IzPack installer support. Defines a new property compile-izpack that will bundle and create an IzPack installer Jar file.</description>
	<url>https://www.anr-institute.com/projects/projects/globalpom-groovy-izpack</url>

	<properties>
		<project.custom.staging.dir>${project.build.directory}/staging</project.custom.staging.dir>
		<project.custom.izpack.mainclass>com.izforge.izpack.installer.Installer</project.custom.izpack.mainclass>
		<project.custom.mainclass />
		<project.custom.organization.url>http://www.anr-institute.com</project.custom.organization.url>
		<project.custom.name>${project.name}</project.custom.name>
		<project.custom.version>${project.version}</project.custom.version>
		<project.custom.type>gui</project.custom.type>
		<project.custom.copyright>${project.custom.year} ${project.custom.user.name}</project.custom.copyright>
		<project.custom.gui.resizeable>yes</project.custom.gui.resizeable>
		<project.custom.gui.width>536</project.custom.gui.width>
		<project.custom.gui.height>428</project.custom.gui.height>
		<project.custom.author.name />
		<project.custom.author.email />
		<project.custom.jre.minversion>${project.custom.source.source}.0</project.custom.jre.minversion>
		<project.custom.readme>doc/en/readme.txt</project.custom.readme>
		<project.custom.icon.unix>etc/application.png</project.custom.icon.unix>
		<project.custom.icon.windows>etc/application.ico</project.custom.icon.windows>
		<project.custom.jarfile>${project.artifactId}-${project.version}-single-jar.jar</project.custom.jarfile>
	</properties>

    <scm>
        <connection>scm:git:${custom.gitpublic.url}globalpom-installation.git</connection>
        <developerConnection>scm:git:${custom.gitpublic.url}globalpom-installation.git</developerConnection>
        <url>scm:git:${custom.gitpublic.url}globalpom-installation.git</url>
    </scm>

	<issueManagement>
		<system>Redmine</system>
		<url>https://www.anr-institute.com/projects/projects/globalpom-groovy-izpack</url>
	</issueManagement>

	<dependencyManagement>
		<dependencies>
			<!-- izpack -->
			<dependency>
				<groupId>org.codehaus.izpack</groupId>
				<artifactId>izpack-standalone-compiler</artifactId>
				<version>${project.custom.izpack.standalone.compiler.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.codehaus.izpack</groupId>
			<artifactId>izpack-standalone-compiler</artifactId>
		</dependency>
	</dependencies>

	<build>

		<plugins>

			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<encoding>${project.build.sourceEncoding}</encoding>
							<outputDirectory>${project.custom.staging.dir}</outputDirectory>
							<escapeString>\</escapeString>
							<resources>
								<resource>
									<directory>src/main/izpack</directory>
									<filtering>true</filtering>
									<excludes>
										<exclude>**/*.jar</exclude>
										<exclude>**/*.pdf</exclude>
										<exclude>**/*.ico</exclude>
										<exclude>**/*.png</exclude>
									</excludes>
								</resource>
								<resource>
									<directory>src/main/izpack</directory>
									<filtering>false</filtering>
									<includes>
										<include>**/*.jar</include>
										<include>**/*.pdf</include>
										<include>**/*.ico</include>
										<include>**/*.png</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>

	</build>

	<profiles>
		<profile>
			<id>compile-izpack</id>
			<build>
				<plugins>
					<!-- prepare dependencies so that izpack jar tag to pickup at compile
						time -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>standard-installer</id>
								<phase>process-resources</phase>
								<goals>
									<goal>copy-dependencies</goal>
								</goals>
								<configuration>
									<excludeScope>test</excludeScope>
									<includeScope>compile</includeScope>
									<stripVersion>true</stripVersion>
									<!-- dont want standalone compiler -->
									<excludeGroupIds>org.codehaus.izpack</excludeGroupIds>
									<outputDirectory>${project.custom.staging.dir}/lib</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>org.codehaus.izpack</groupId>
						<artifactId>izpack-maven-plugin</artifactId>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>izpack</goal>
								</goals>
								<configuration>
									<izpackBasedir>${project.custom.staging.dir}</izpackBasedir>
									<descriptorEncoding>${project.build.sourceEncoding}</descriptorEncoding>
								</configuration>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>org.codehaus.izpack</groupId>
								<artifactId>izpack-standalone-compiler</artifactId>
								<version>${project.custom.izpack.standalone.compiler.version}</version>
							</dependency>
						</dependencies>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-enforcer-plugin</artifactId>
						<executions>
							<execution>
								<id>enforce-property</id>
								<goals>
									<goal>enforce</goal>
								</goals>
								<configuration>
									<rules>
										<requireProperty>
											<property>project.custom.mainclass</property>
											<regex>.+</regex>
											<regexMessage>Property project.custom.mainclass must be set. The property cannot be empty.</regexMessage>
										</requireProperty>
										<requireProperty>
											<property>project.custom.author.name</property>
											<regex>.+</regex>
											<regexMessage>Property project.custom.author.name must be set. The property cannot be empty.</regexMessage>
										</requireProperty>
										<requireProperty>
											<property>project.custom.author.email</property>
											<regex>.+</regex>
											<regexMessage>Property project.custom.author.email must be set. The property cannot be empty.</regexMessage>
										</requireProperty>
									</rules>
									<fail>true</fail>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

	</profiles>

</project>
